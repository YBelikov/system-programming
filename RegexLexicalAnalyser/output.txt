KEY_WORD				func
IDENTIFIER				ReverseRunes
OPEN_PARENTHESIS				(
IDENTIFIER				s
PREDECLARED_IDENTIFIER				string
CLOSE_PARENTHESIS				)
PREDECLARED_IDENTIFIER				string
OPEN_CURLY_BRACE				{
IDENTIFIER				r
ASSIGNMENT_WITH_DEDUCTION				:=
OPEN_SQUARE_BRACE				[
CLOSE_SQUARE_BRACE				]
IDENTIFIER				rune
OPEN_PARENTHESIS				(
IDENTIFIER				s
CLOSE_PARENTHESIS				)
IDENTIFIER				x
ASSIGNMENT				=
STRING_LITERAL				"fafaf"
SEMICOLON				;
IDENTIFIER				u
ASSIGNMENT				=
FLOATING_POINT_NUMBER				2.2121
IDENTIFIER				l
ASSIGNMENT_WITH_DEDUCTION				:=
INTEGER				1
ERROR				&#!3!
KEY_WORD				for
IDENTIFIER				i
COMA				,
IDENTIFIER				j
ASSIGNMENT_WITH_DEDUCTION				:=
INTEGER				0
COMA				,
PREDECLARED_IDENTIFIER				len
OPEN_PARENTHESIS				(
IDENTIFIER				r
CLOSE_PARENTHESIS				)
MINUS				-
INTEGER				1
SEMICOLON				;
IDENTIFIER				i
LESS				<
PREDECLARED_IDENTIFIER				len
OPEN_PARENTHESIS				(
IDENTIFIER				r
CLOSE_PARENTHESIS				)
DIVIDE				/
INTEGER				2
SEMICOLON				;
IDENTIFIER				i
COMA				,
IDENTIFIER				j
ASSIGNMENT				=
IDENTIFIER				i
PLUS				+
INTEGER				1
COMA				,
IDENTIFIER				j
MINUS				-
INTEGER				1
OPEN_CURLY_BRACE				{
IDENTIFIER				r
OPEN_SQUARE_BRACE				[
IDENTIFIER				i
CLOSE_SQUARE_BRACE				]
COMA				,
IDENTIFIER				r
OPEN_SQUARE_BRACE				[
IDENTIFIER				j
CLOSE_SQUARE_BRACE				]
ASSIGNMENT				=
IDENTIFIER				r
OPEN_SQUARE_BRACE				[
IDENTIFIER				j
CLOSE_SQUARE_BRACE				]
COMA				,
IDENTIFIER				r
OPEN_SQUARE_BRACE				[
IDENTIFIER				i
CLOSE_SQUARE_BRACE				]
SEMICOLON				;
CLOSING_CURLY_BRACE				}
KEY_WORD				return
PREDECLARED_IDENTIFIER				string
OPEN_PARENTHESIS				(
IDENTIFIER				r
CLOSE_PARENTHESIS				)
CLOSING_CURLY_BRACE				}
CLOSING_CURLY_BRACE				}
